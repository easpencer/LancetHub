'use client';

import { useEffect, useRef, useState } from 'react';
import L from 'leaflet';
import 'leaflet/dist/leaflet.css';
import dynamic from 'next/dynamic';
import styles from './pandemic-vulnerability.module.css';

// Dynamically import Plotly to avoid SSR issues
const Plot = dynamic(() => import('react-plotly.js'), { ssr: false });

// Import US comprehensive data
import { 
  usStateResilienceData, 
  usTerritoryResilienceData, 
  federalDistrictData, 
  usDataSources as usSourcesData,
  methodologyDescription,
  communityLevelFramework
} from './usComprehensiveData';

// Import resilience data from the resilience map
const countryResilienceData = {
  'United States': {
    name: 'United States',
    overallScore: 72,
    dimensions: { healthcare: 78, information: 65, social: 70, economic: 75, governance: 71, infrastructure: 82, environmental: 68 },
    vulnerabilities: ['Information trust', 'Health disparities', 'Political polarization'],
    strengths: ['Medical technology', 'Research capacity', 'Economic resources']
  },
  'China': {
    name: 'China',
    overallScore: 74,
    dimensions: { healthcare: 72, information: 55, social: 68, economic: 80, governance: 75, infrastructure: 85, environmental: 60 },
    vulnerabilities: ['Environmental health', 'Information transparency'],
    strengths: ['Infrastructure development', 'Central coordination', 'Manufacturing capacity']
  },
  'Germany': {
    name: 'Germany',
    overallScore: 81,
    dimensions: { healthcare: 85, information: 78, social: 82, economic: 84, governance: 80, infrastructure: 88, environmental: 75 },
    vulnerabilities: ['Aging population', 'Supply chain dependencies'],
    strengths: ['Healthcare system', 'Industrial capacity', 'Social welfare']
  },
  'Brazil': {
    name: 'Brazil',
    overallScore: 58,
    dimensions: { healthcare: 55, information: 60, social: 52, economic: 58, governance: 56, infrastructure: 62, environmental: 65 },
    vulnerabilities: ['Healthcare access inequality', 'Economic disparities'],
    strengths: ['Natural resources', 'Community resilience', 'Biodiversity']
  },
  'India': {
    name: 'India',
    overallScore: 54,
    dimensions: { healthcare: 48, information: 58, social: 50, economic: 55, governance: 52, infrastructure: 60, environmental: 58 },
    vulnerabilities: ['Healthcare infrastructure', 'Information access'],
    strengths: ['Population diversity', 'Tech innovation', 'Community networks']
  },
  'United Kingdom': {
    name: 'United Kingdom',
    overallScore: 76,
    dimensions: { healthcare: 80, information: 75, social: 72, economic: 78, governance: 82, infrastructure: 85, environmental: 70 },
    vulnerabilities: ['Economic inequality', 'Healthcare funding'],
    strengths: ['Research excellence', 'Global connectivity', 'Democratic institutions']
  },
  'France': {
    name: 'France',
    overallScore: 78,
    dimensions: { healthcare: 88, information: 72, social: 75, economic: 76, governance: 78, infrastructure: 82, environmental: 72 },
    vulnerabilities: ['Social tensions', 'Economic pressures'],
    strengths: ['Healthcare system', 'Social protection', 'Cultural resilience']
  },
  'Japan': {
    name: 'Japan',
    overallScore: 79,
    dimensions: { healthcare: 85, information: 70, social: 80, economic: 75, governance: 78, infrastructure: 90, environmental: 75 },
    vulnerabilities: ['Aging society', 'Natural disasters'],
    strengths: ['Disaster preparedness', 'Technological innovation', 'Social cohesion']
  },
  'South Korea': {
    name: 'South Korea',
    overallScore: 77,
    dimensions: { healthcare: 82, information: 75, social: 74, economic: 78, governance: 76, infrastructure: 88, environmental: 68 },
    vulnerabilities: ['Environmental challenges', 'Economic pressures'],
    strengths: ['Digital infrastructure', 'Healthcare system', 'Crisis response']
  },
  'Canada': {
    name: 'Canada',
    overallScore: 80,
    dimensions: { healthcare: 85, information: 78, social: 82, economic: 78, governance: 85, infrastructure: 80, environmental: 78 },
    vulnerabilities: ['Geographic challenges', 'Healthcare access in rural areas'],
    strengths: ['Healthcare system', 'Social cohesion', 'Natural resources']
  }
};

// US Policy Scenarios Data
const usPolicyScenarios = {
  'baseline': {
    name: 'Current Baseline',
    description: 'Current funding and policy levels maintained',
    globalEngagement: 100,
    domesticPreparednes: 100,
    researchFunding: 100,
    multilateralSupport: 100,
    stateImpacts: {}
  },
  'isolationist': {
    name: 'America First - International Withdrawal',
    description: 'Significant reduction in international health engagement and USAID funding',
    globalEngagement: 25,
    domesticPreparedness: 85,
    researchFunding: 75,
    multilateralSupport: 15,
    keyChanges: [
      'USAID global health budget cut by 75%',
      'WHO funding reduced by 80%',
      'PEPFAR program scaled back significantly', 
      'International disease surveillance partnerships ended',
      'Reduced CDC global presence',
      'Limited international outbreak response'
    ],
    stateImpacts: {
      'California': { vulnerability: +8, reasoning: 'Border state with reduced international coordination' },
      'Texas': { vulnerability: +6, reasoning: 'Major border state, reduced cross-border health cooperation' },
      'New York': { vulnerability: +5, reasoning: 'International travel hub, reduced global intelligence' },
      'Florida': { vulnerability: +7, reasoning: 'International travel hub, reduced Caribbean cooperation' },
      'Washington': { vulnerability: +4, reasoning: 'Pacific rim connections, reduced Asian health partnerships' }
    },
    globalImpacts: [
      'Delayed outbreak detection in developing countries',
      'Reduced international vaccine distribution capacity', 
      'Weakened global health security architecture',
      'Increased likelihood of pandemic origins going undetected'
    ]
  },
  'austerity': {
    name: 'Federal Austerity - Domestic Cuts',
    description: 'Significant cuts to CDC, FEMA, and federal health preparedness',
    globalEngagement: 70,
    domesticPreparedness: 60,
    researchFunding: 50,
    multilateralSupport: 80,
    keyChanges: [
      'CDC budget reduced by 40%',
      'FEMA emergency preparedness funding cut by 50%',
      'Strategic National Stockpile reduced by 60%',
      'State health department federal support cut by 45%',
      'Hospital preparedness program defunded',
      'Vaccine stockpile maintenance reduced'
    ],
    stateImpacts: {
      'Mississippi': { vulnerability: +12, reasoning: 'Already low capacity, heavily dependent on federal support' },
      'West Virginia': { vulnerability: +11, reasoning: 'Rural state with limited resources, high federal dependence' },
      'Alabama': { vulnerability: +10, reasoning: 'Low baseline capacity, reduced federal health funding' },
      'Louisiana': { vulnerability: +9, reasoning: 'Hurricane-prone, reduced FEMA capacity' },
      'Arkansas': { vulnerability: +8, reasoning: 'Rural infrastructure, limited state resources' }
    }
  },
  'optimized': {
    name: 'Evidence-Based Investment',
    description: 'Increased funding based on COVID-19 lessons learned',
    globalEngagement: 130,
    domesticPreparedness: 140,
    researchFunding: 150,
    multilateralSupport: 120,
    keyChanges: [
      'CDC budget increased by 40% with new pandemic units',
      'Strategic National Stockpile expanded and modernized',
      'State health departments receive 50% funding increase',
      'New international disease surveillance network',
      'Expanded vaccine manufacturing capacity',
      'Enhanced community health worker programs'
    ],
    stateImpacts: {
      'Vermont': { vulnerability: -5, reasoning: 'Enhanced rural health programs' },
      'Massachusetts': { vulnerability: -3, reasoning: 'Expanded research collaborations' },
      'Connecticut': { vulnerability: -4, reasoning: 'Improved regional coordination' },
      'Hawaii': { vulnerability: -6, reasoning: 'Enhanced Pacific health monitoring' },
      'New Hampshire': { vulnerability: -4, reasoning: 'Rural preparedness improvements' }
    }
  }
};

export default function DeepDiveAnalytics({ scenario, isOptimistic, onCountrySelect }) {
  const [deepDiveTab, setDeepDiveTab] = useState('overview');
  const [selectedScenario, setSelectedScenario] = useState('baseline');
  const [sortBy, setSortBy] = useState('vulnerability');
  const [sortOrder, setSortOrder] = useState('desc');
  const [searchTerm, setSearchTerm] = useState('');

  const deepDiveTabs = [
    { key: 'overview', label: 'üåç Global Overview' },
    { key: 'usdeep', label: 'üá∫üá∏ US Deep Dive' },
    { key: 'scenarios', label: 'üéØ Policy Scenarios' },
    { key: 'outbreaks', label: '‚ö° Historical Outbreaks' },
    { key: 'insights', label: 'üîç Resilience Insights' }
  ];

  return (
    <div className={styles.deepDiveContainer}>
      {/* Tab Navigation */}
      <div className={styles.deepDiveTabNavigation}>
        {deepDiveTabs.map(tab => (
          <button
            key={tab.key}
            className={`${styles.deepDiveTabButton} ${deepDiveTab === tab.key ? styles.active : ''}`}
            onClick={() => setDeepDiveTab(tab.key)}
          >
            {tab.label}
          </button>
        ))}
      </div>

      {/* Tab Content */}
      <div className={styles.deepDiveContent}>
        {/* Global Overview Tab */}
        {deepDiveTab === 'overview' && (
          <div>
            <h3 className={styles.deepDiveTitle}>üåç Global Pandemic Intelligence Overview</h3>
            <p className={styles.deepDiveDescription}>
              Comprehensive analysis of global pandemic preparedness, resilience frameworks, and outbreak intelligence.
            </p>
            
            {/* Country Resilience Profiles */}
            <div className={styles.deepDiveSection}>
              <h4>üìä Country Resilience Profiles</h4>
              {Object.entries(countryResilienceData).map(([countryName, data]) => (
                <div key={countryName} className={styles.deepDiveCard}>
                  <div className={styles.cardHeader}>
                    <h5>{data.name}</h5>
                    <div className={`${styles.scoreBadge} ${data.overallScore >= 75 ? styles.high : data.overallScore >= 60 ? styles.medium : styles.low}`}>
                      {data.overallScore}
                    </div>
                  </div>
                  
                  <div className={styles.dimensionsGrid}>
                    {Object.entries(data.dimensions).map(([dimension, score]) => (
                      <div key={dimension} className={styles.dimensionItem}>
                        <span className={styles.dimensionLabel}>{dimension}:</span>
                        <span className={`${styles.dimensionScore} ${score >= 75 ? styles.high : score >= 60 ? styles.medium : styles.low}`}>
                          {score}
                        </span>
                      </div>
                    ))}
                  </div>
                  
                  <div className={styles.strengthsVulnerabilities}>
                    <div className={styles.strengthsSection}>
                      <strong>üí™ Strengths:</strong>
                      <ul>
                        {data.strengths.map((strength, i) => (
                          <li key={i}>{strength}</li>
                        ))}
                      </ul>
                    </div>
                    <div className={styles.vulnerabilitiesSection}>
                      <strong>‚ö†Ô∏è Vulnerabilities:</strong>
                      <ul>
                        {data.vulnerabilities.map((vulnerability, i) => (
                          <li key={i}>{vulnerability}</li>
                        ))}
                      </ul>
                    </div>
                  </div>
                </div>
              ))}
            </div>
          </div>
        )}

        {/* US Deep Dive Tab */}
        {deepDiveTab === 'usdeep' && (
          <div>
            <h3 className={styles.deepDiveTitle}>üá∫üá∏ United States Deep Dive Analysis</h3>
            <p className={styles.deepDiveDescription}>
              Comprehensive state-by-state pandemic resilience analysis covering all 50 states, 5 territories, 
              and the District of Columbia. Includes county-level granularity and community-focused metrics.
            </p>

            {/* US Resilience Scatter Plot */}
            <div className={styles.deepDiveSection}>
              <h4>üìà US States Resilience vs Vulnerability Analysis</h4>
              <div className={styles.plotContainer}>
                {typeof window !== 'undefined' && (
                  <Plot
                    data={[
                      {
                        x: Object.values(usStateResilienceData).map(state => state.dimensions.healthcare),
                        y: Object.values(usStateResilienceData).map(state => state.dimensions.social),
                        mode: 'markers',
                        type: 'scatter',
                        name: 'US States',
                        text: Object.values(usStateResilienceData).map(state => 
                          `${state.name}<br>Overall Score: ${state.overallScore}<br>Population: ${(state.population/1000000).toFixed(1)}M<br>Rank: #${state.rank}`
                        ),
                        hovertemplate: '%{text}<br>Healthcare: %{x}<br>Social: %{y}<extra></extra>',
                        marker: {
                          size: Object.values(usStateResilienceData).map(state => Math.sqrt(state.population/1000000) * 3 + 8),
                          color: Object.values(usStateResilienceData).map(state => state.overallScore),
                          colorscale: [
                            [0, '#FF4444'],
                            [0.2, '#FF9800'], 
                            [0.4, '#FFD700'],
                            [0.6, '#90EE90'],
                            [1, '#2E8B57']
                          ],
                          colorbar: {
                            title: 'Resilience Score',
                            titlefont: { color: '#f0f2f5' },
                            tickfont: { color: '#f0f2f5' }
                          },
                          line: {
                            width: 1,
                            color: 'rgba(255, 255, 255, 0.3)'
                          },
                          opacity: 0.8
                        }
                      }
                    ]}
                    layout={{
                      title: {
                        text: 'US States: Healthcare vs Social Resilience',
                        font: { color: '#f0f2f5', size: 16 }
                      },
                      xaxis: {
                        title: 'Healthcare Capacity Score',
                        gridcolor: 'rgba(255, 255, 255, 0.1)',
                        color: '#f0f2f5',
                        tickfont: { color: '#f0f2f5' }
                      },
                      yaxis: {
                        title: 'Social Resilience Score', 
                        gridcolor: 'rgba(255, 255, 255, 0.1)',
                        color: '#f0f2f5',
                        tickfont: { color: '#f0f2f5' }
                      },
                      plot_bgcolor: 'rgba(0,0,0,0)',
                      paper_bgcolor: 'rgba(0,0,0,0)',
                      font: { color: '#f0f2f5' },
                      margin: { l: 60, r: 60, t: 50, b: 60 },
                      hovermode: 'closest'
                    }}
                    config={{
                      displayModeBar: false,
                      responsive: true
                    }}
                    style={{ width: '100%', height: '400px' }}
                  />
                )}
              </div>
            </div>

            {/* Top and Bottom States */}
            <div className={styles.statesComparison}>
              <div className={styles.topStates}>
                <h4>üèÜ Top 10 Most Resilient States</h4>
                <div className={styles.statesList}>
                  {Object.values(usStateResilienceData)
                    .sort((a, b) => b.overallScore - a.overallScore)
                    .slice(0, 10)
                    .map((state, index) => (
                      <div key={state.name} className={styles.stateCard}>
                        <div className={styles.stateRank}>#{index + 1}</div>
                        <div className={styles.stateInfo}>
                          <div className={styles.stateName}>{state.name}</div>
                          <div className={styles.statePopulation}>Pop: {state.population.toLocaleString()}</div>
                        </div>
                        <div className={styles.stateScore}>{state.overallScore}</div>
                      </div>
                    ))}
                </div>
              </div>
              
              <div className={styles.bottomStates}>
                <h4>üéØ States Needing Support</h4>
                <div className={styles.statesList}>
                  {Object.values(usStateResilienceData)
                    .sort((a, b) => a.overallScore - b.overallScore)
                    .slice(0, 10)
                    .map((state, index) => (
                      <div key={state.name} className={styles.stateCard}>
                        <div className={styles.stateRank}>#{Object.values(usStateResilienceData).length - index}</div>
                        <div className={styles.stateInfo}>
                          <div className={styles.stateName}>{state.name}</div>
                          <div className={styles.statePopulation}>Pop: {state.population.toLocaleString()}</div>
                        </div>
                        <div className={styles.stateScore}>{state.overallScore}</div>
                      </div>
                    ))}
                </div>
              </div>
            </div>
          </div>
        )}

        {/* Policy Scenarios Tab */}
        {deepDiveTab === 'scenarios' && (
          <div>
            <h3 className={styles.deepDiveTitle}>üéØ US Policy Impact Scenarios</h3>
            <p className={styles.deepDiveDescription}>
              Evidence-based modeling of how policy changes affect pandemic preparedness and response capacity across states.
            </p>

            {/* Scenario Selector */}
            <div className={styles.scenarioSelector}>
              {Object.entries(usPolicyScenarios).map(([key, scenario]) => (
                <button
                  key={key}
                  className={`${styles.scenarioButton} ${selectedScenario === key ? styles.active : ''}`}
                  onClick={() => setSelectedScenario(key)}
                >
                  {scenario.name}
                </button>
              ))}
            </div>

            {/* Selected Scenario Details */}
            {selectedScenario !== 'baseline' && (
              <div className={styles.scenarioDetails}>
                <div className={styles.scenarioHeader}>
                  <h4>{usPolicyScenarios[selectedScenario].name}</h4>
                  <p>{usPolicyScenarios[selectedScenario].description}</p>
                </div>

                {/* Impact Metrics */}
                <div className={styles.impactMetrics}>
                  <div className={styles.metricCard}>
                    <div className={styles.metricLabel}>Global Engagement</div>
                    <div className={styles.metricValue}>
                      {usPolicyScenarios[selectedScenario].globalEngagement}%
                    </div>
                  </div>
                  <div className={styles.metricCard}>
                    <div className={styles.metricLabel}>Domestic Preparedness</div>
                    <div className={styles.metricValue}>
                      {usPolicyScenarios[selectedScenario].domesticPreparedness}%
                    </div>
                  </div>
                  <div className={styles.metricCard}>
                    <div className={styles.metricLabel}>Research Funding</div>
                    <div className={styles.metricValue}>
                      {usPolicyScenarios[selectedScenario].researchFunding}%
                    </div>
                  </div>
                  <div className={styles.metricCard}>
                    <div className={styles.metricLabel}>Multilateral Support</div>
                    <div className={styles.metricValue}>
                      {usPolicyScenarios[selectedScenario].multilateralSupport}%
                    </div>
                  </div>
                </div>

                {/* Key Policy Changes */}
                <div className={styles.policyChanges}>
                  <h5>üìã Key Policy Changes</h5>
                  <ul className={styles.changesList}>
                    {usPolicyScenarios[selectedScenario].keyChanges?.map((change, index) => (
                      <li key={index}>{change}</li>
                    ))}
                  </ul>
                </div>

                {/* State-Level Impacts */}
                {Object.keys(usPolicyScenarios[selectedScenario].stateImpacts || {}).length > 0 && (
                  <div className={styles.stateImpacts}>
                    <h5>üó∫Ô∏è Projected State-Level Impacts</h5>
                    <div className={styles.impactsList}>
                      {Object.entries(usPolicyScenarios[selectedScenario].stateImpacts).map(([state, impact]) => (
                        <div key={state} className={styles.impactCard}>
                          <div className={styles.impactState}>{state}</div>
                          <div className={`${styles.impactChange} ${impact.vulnerability > 0 ? styles.negative : styles.positive}`}>
                            {impact.vulnerability > 0 ? '+' : ''}{impact.vulnerability}% vulnerability
                          </div>
                          <div className={styles.impactReasoning}>{impact.reasoning}</div>
                        </div>
                      ))}
                    </div>
                  </div>
                )}

                {/* Global Impact Assessment */}
                {usPolicyScenarios[selectedScenario].globalImpacts && (
                  <div className={styles.globalImpacts}>
                    <h5>üåç Global Ripple Effects</h5>
                    <ul className={styles.globalImpactsList}>
                      {usPolicyScenarios[selectedScenario].globalImpacts.map((impact, index) => (
                        <li key={index}>{impact}</li>
                      ))}
                    </ul>
                  </div>
                )}
              </div>
            )}
          </div>
        )}

        {/* Other tabs placeholder */}
        {(deepDiveTab === 'outbreaks' || deepDiveTab === 'insights') && (
          <div>
            <h3 className={styles.deepDiveTitle}>
              {deepDiveTab === 'outbreaks' ? '‚ö° Historical Outbreaks' : 'üîç Resilience Insights'}
            </h3>
            <p className={styles.deepDiveDescription}>
              {deepDiveTab === 'outbreaks' 
                ? 'Comprehensive analysis of historical pandemic events and their patterns.'
                : 'Advanced insights into pandemic resilience factors and correlations.'
              }
            </p>
            <div className={styles.comingSoon}>
              <h4>Coming Soon</h4>
              <p>This section is under development and will include detailed analysis and interactive visualizations.</p>
            </div>
          </div>
        )}
      </div>
    </div>
  );
}